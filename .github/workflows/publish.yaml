name: Publish Package
on:
    release:
        types: [published]

env:
    PKG_NAME: scene-fade
    MANIFEST_FILE_PATH: dist/module.json
    RELEASE_NAME: ${{ github.event.release.tag_name }}

jobs:
    run-action:
        name: Run action
        runs-on: ubuntu-latest
        permissions:
            contents: write
            discussions: write

        steps:
            - uses: actions/checkout@v4

            - name: Use Node.js 18.x
              uses: actions/setup-node@v4
              with:
                  node-version: 18.x

            - name: Install dependencies
              run: npm ci

            - name: Bump version
              run: npm version ${{ github.event.release.tag_name }} --no-git-tag-version

            - name: Build
              run: npm run build

            - name: Zip Files
              working-directory: ./dist
              run: zip -r ./${{env.PKG_NAME}}.zip ./*

            - name: upload binaries to release
              uses: softprops/action-gh-release@v1
              if: ${{startsWith(github.ref, 'refs/tags/') }}
              with:
                  files: |
                      ./dist/${{env.PKG_NAME}}.zip
                      ./dist/module.json

            - name: Commit and push
              run: |
                  git config user.name github-actions
                  git config user.email github-actions@github.com
                  git commit -am "chore(release): ${{ github.event.release.tag_name }}"
                  git push origin HEAD:main

            - name: Publish to FoundryVTT Package Release API
              env:
                FOUNDRY_API_KEY: ${{ secrets.FOUNDRY_API_KEY }}
                PKG_NAME: ${{ env.PKG_NAME }}
                RELEASE_NAME: ${{ env.RELEASE_NAME }}
              run: |
                MANIFEST_URL="https://github.com/${{ github.repository }}/releases/download/${{ env.RELEASE_NAME }}/module.json"
                NOTES_URL="https://github.com/${{ github.repository }}/releases/tag/${{ env.RELEASE_NAME }}"
                # Ajuste os valores de compatibility conforme necess√°rio
                curl -X POST "https://api.foundryvtt.com/_api/packages/release_version/" \
                  -H "Content-Type: application/json" \
                  -H "Authorization: $FOUNDRY_API_KEY" \
                  -d '{
                    "id": "'"$PKG_NAME"'",
                    "release": {
                      "version": "'"${RELEASE_NAME#v}"'",
                      "manifest": "'"$MANIFEST_URL"'",
                      "notes": "'"$NOTES_URL"'",
                      "compatibility": {
                        "minimum": "10.312",
                        "verified": "11",
                        "maximum": ""
                      }
                    }
                  }'
